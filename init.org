# -*- org -*-
#+TITLE: init.org
#+STARTUP: overview
#+PROPERTY: header-args:emacs-lisp :tangle init.el
#+PROPERTY: header-args            :results silent

* これはなに？
** 使い方
  - C-c C-v t でinit.elを生成
    - [[http://orgmode.org/manual/Header-arguments-in-Org-mode-properties.html#Header-arguments-in-Org-mode-properties][Header arguments in Org mode properties - The Org Manual]]
  - [[http://cask.readthedocs.org/en/latest/index.html][Cask — Cask 0.7.0]]
  - 日本のEmacsユーザ向け．
  - Emacsを設定するためのelです．
    - [[https://github.com/ychubachi/.emacs.d/blob/master/init.org][.emacs.d/init.org at master · ychubachi/.emacs.d]]
  - preludeを意識しています
    - [[http://batsov.com/prelude/][Prelude by bbatsov]]
  - コードネーム候補
    - aperitif 食前酒
  - daemonについて
  - 対応するEmacsのバージョンは24.3（2013-03-11公開版）以降です．
    - [[http://www.gnu.org/software/emacs/][GNU Emacs - GNU Project - Free Software Foundation (FSF)]]
    - [[http://www.gnu.org/software/emacs/news/NEWS.24.3]]
    - [[http://www.gnu.org/software/emacs/manual/html_node/elisp/Lexical-Binding.html][Lexical Binding - GNU Emacs Lisp Reference Manual]]
    - [[http://www.gnu.org/software/emacs/manual/html_node/elisp/Closures.html#Closures][Closures - GNU Emacs Lisp Reference Manual]]

  - init.elについて
    - [[http://www.gnu.org/software/emacs/manual/html_node/emacs/Init-File.html#Init-File][Init File - GNU Emacs Manual]]
    - [[http://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Syntax.html#Init-Syntax][Init Syntax - GNU Emacs Manual]]
      - init fileの文法．
      - 特定の変数は自動的にbuffer localになる．
	- この場合はset-defaultを使うこと．

** カスタマイズ
  - custom.elを最後に読むので，ここでの設定を上書きできます．
  - custom.elはgitではignoreします．
  - Dropboxと連携したorg-modeとMobileOrgのための設定
  - [[http://d.hatena.ne.jp/a_bicky/20131230/1388396559][custom-set-variables は使わない方が良いかもしれない - あらびき日記]]
** 準備
*** git submodule
  - git submodule init
  - git submodule update
*** フォント
  - Ricty のインストール
*** aspell コマンドのインストール
  - git-commit-mode-hook でflyspellが自動的にonになる．
  - .aspell.conf の設定
    - [[http://sky-y.hatenablog.jp/entry/20091229/1262106336][YaTeX + aspell - 雲行きそらゆきココロイキ]]

  Error enabling Flyspell mode:
  (Error: No word lists can be found for the language "ja_JP".)

* ヘッダコメント

#+begin_src emacs-lisp :padline no
;; init.el --- Emacsの初期設定
#+end_src

* Emacs本体が提供する機能
** Emacsサーバーの起動

- Emacs serverの開始
- Emacs 既に起動している場合は立ち上げない
  - [[http://stackoverflow.com/questions/5570451/how-to-start-emacs-server-only-if-it-is-not-started][configuration - How to start emacs server only if it is not started? - Stack Overflow]]

#+begin_src emacs-lisp
  (load "server")
  (unless (server-running-p)
    (server-start))
#+end_src

** C-hをDELキーに設定
   - C-h が押されたら，C-? (<DEL>) に変換する．
   - ヘルプは[F1]でも参照できる．
   - 参考
     - [[http://akisute3.hatenablog.com/entry/20120318/1332059326][EmacsのC-hをbackspaceとして使用する - 勉強日記]]
     - [[http://www.gnu.org/software/emacs/manual/html_node/efaq/Swapping-keys.html#Swapping-keys][Swapping keys - GNU Emacs FAQ]]
   - keyboad-translate関数はサーバにする際動作しなかった
     - [[http://lists.gnu.org/archive/html/help-gnu-emacs/2009-10/msg00505.html][Re: keyboard-translate not working with emacs daemon]]

#+begin_src emacs-lisp
(define-key key-translation-map [?\C-h] [?\C-?])
#+end_src

** 不要な行末の空白を削除

- 保存する前に，不要な空白を取り除きます．
- 参考
  - [[http://batsov.com/articles/2011/11/25/emacs-tip-number-3-whitespace-cleanup/][Emacs Tip #3: Whitespace Cleanup - (think)]]
  - [[http://qiita.com/itiut@github/items/4d74da2412a29ef59c3a][Emacs - whitespace-modeを使って、ファイルの保存時に行末のスペースや末尾の改行を削除する - Qiita]]

#+begin_src emacs-lisp
  (add-hook 'before-save-hook
   'whitespace-cleanup)
#+end_src

** diredでファイル名のリネーム

diredモードで r キーを押すと編集モードに入る．
完了したらC-c C-cで決定．C-c ESCでキャンセル．

wdiredのrequireはdired-mode-mapを定義するために必要．

#+begin_src emacs-lisp
  (require 'wdired)
  (define-key dired-mode-map "r"
    'wdired-change-to-wdired-mode)
#+end_src

* 日本語関連の設定						:mule-cmd.el:
** 日本語文字コード

- 言語環境を日本語に，コード体系をUTF-8にします．

#+begin_src emacs-lisp
  (set-language-environment "japanese")
  (prefer-coding-system 'utf-8)
#+end_src

** 日本語文字フォント
ｰ Fontに関する調査
  - [[file:test.org::*Emacs%E3%81%AE%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AE%E3%81%8A%E8%A9%B1][Emacsのフォントのお話]]

- この値はcustomize可能です．

#+begin_src emacs-lisp
  (when (eq system-type 'gnu/linux)
    (add-to-list 'default-frame-alist '(font . "ricty-13.5")))
#+end_src

* パッケージ機能の初期化
** ELPAアーカイブスの設定
#+begin_src emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
	       '("melpa" . "http://melpa.milkbox.net/packages/") t)
  (add-to-list 'package-archives
	       '("marmalade" . "http://marmalade-repo.org/packages/"))
  (package-initialize)
#+end_src

** use-packageの設定
   - [[https://github.com/jwiegley/use-package][jwiegley/use-package]]
#+begin_src emacs-lisp
  (package-refresh-contents)
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))
  (require 'use-package)
#+end_src

* パッケージ
** ace-jump-mode
#+begin_src emacs-lisp
  (use-package ace-jump-mode
	       :bind (("C-." . ace-jump-mode)
		      ("C-," . ace-jump-line-mode))
	       :ensure t)
#+end_src
** ShellのPATH設定を引き継ぐ
  - [[http://qiita.com/catatsuy/items/3dda714f4c60c435bb25][EmacsでPATHの設定が引き継がれない問題をエレガントに解決する - Qiita {キータ}]]

#+begin_src emacs-lisp
  (use-package exec-path-from-shell
	       :config
	       (progn (exec-path-from-shell-initialize))
	       :ensure t)
#+end_src

** shell-pop
#+begin_src emacs-lisp
  (use-package shell-pop
	       :config
	       (custom-set-variables
		'(shell-pop-autocd-to-working-dir nil)
		'(shell-pop-shell-type
		  (quote ("eshell" "*eshell*" (lambda nil (eshell)))))
		'(shell-pop-universal-key "C-z")
		'(shell-pop-window-height 30))
	       :ensure t)
#+end_src

** Undo Tree
#+begin_src emacs-lisp
  (use-package undo-tree
	       :config
	       (global-undo-tree-mode t)
	       :ensure t)
#+end_src

** yasnippet
  - [[https://github.com/capitaomorte/yasnippet][capitaomorte/yasnippet]]
  - [[http://fukuyama.co/yasnippet][yasnippet 8.0の導入からスニペットの書き方、anything/helm/auto-completeとの連携 - Web学び]]

#+begin_src emacs-lisp
  (use-package yasnippet
	       :config
	       (yas-global-mode 1)
	       :ensure t)
#+end_src
** Magit
#+begin_src emacs-lisp
  (use-package magit
	       :bind ("C-c g" . magit-status)
	       :ensure t)
#+end_src
** open-junk-file
#+begin_src emacs-lisp
  (use-package open-junk-file
	       :bind ("C-c j" . open-junk-file)
	       :config
	       (setq open-junk-file-directory "~/tmp/junk/%Y/%m/%d-%H%M%S.")
	       :ensure t)
#+end_src

** 複数のカーソルを扱う:multiple-cursors
- [[https://github.com/magnars/multiple-cursors.el][magnars/multiple-cursors.el]]
#+begin_src emacs-lisp
  (use-package multiple-cursors
	       :ensure t)
#+end_src

** リージョンがある間のキーバインディングを変更する
#+begin_src emacs-lisp
  (use-package region-bindings-mode
	       :init
	       (progn
		 (region-bindings-mode-enable)
		 (define-key region-bindings-mode-map
		   "a" 'mc/mark-all-like-this)
		 (define-key region-bindings-mode-map
		   "p" 'mc/mark-previous-like-this)
		 (define-key region-bindings-mode-map
		   "n" 'mc/mark-next-like-this)
		 (define-key region-bindings-mode-map
		   "m" 'mc/mark-more-like-this-extended)
		 (define-key region-bindings-mode-map
		   "e" 'mc/edit-lines))
	       :ensure t)
#+end_src


* 後処理
** カスタマイズ設定を保存するファイルの指定
  - 概要
     - カスタマイズ設定を保存するファイルを指定して，読み込みます．
       - custom.elには個人用の設定を書く
     - このコードで設定した値は，custom.el内で上書きすることができます．
  - 参考
     - [[http://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Customizations.html][Saving Customizations - GNU Emacs Manual]]

#+begin_src emacs-lisp
  (setq custom-file "~/.emacs.d/custom.el")
  (if (file-exists-p custom-file)
      (load custom-file))
#+end_src

* フッタコメント
#+begin_src emacs-lisp
  ;;; init.el ends here
#+end_src
